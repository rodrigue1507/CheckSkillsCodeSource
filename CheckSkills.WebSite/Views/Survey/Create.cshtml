@model CreateSurveyViewModel
@{
    ViewData["Title"] = "Create";
    Layout = "~/Views/Shared/_Layout.cshtml";
}


@using (Html.BeginForm("Create", "Survey", FormMethod.Post))
{
    <div class="container">     
                    @Html.ValidationSummary()
                    <div class="form-group">
                        <div class="row">
                            <div class="form-group col-xs-3">
                                <div class="panel panel-default">
                                    <div class="panel-heading">@Html.LabelFor(model => model.TypeId, new { @class = "col-sm-2 col-form-label" })</div>
                                    <div class="panel-body">@Html.DropDownListFor(model => model.TypeId, Model.QuestionTypes, "Non-défini", new { @class = "form-control" })</div>
                                </div>
                            </div>
                            <div class="form-group row col-xs-3">
                                <div class="panel panel-default">
                                    <div class="panel-heading">@Html.LabelFor(model => model.CategoryId, new { @class = "col-sm-2 col-form-label" })</div>
                                    <div class="panel-body">@Html.DropDownListFor(model => model.CategoryId, Model.Categories, "Non-défini", new { @class = "form-control" })</div>
                                </div>
                            </div>

                            <div class="form-group row col-xs-3">
                                <div class="panel panel-default">
                                    <div class="panel-heading">@Html.LabelFor(model => model.DifficultyId, new { @class = "col-sm-2 col-form-label" })</div>
                                    <div class="panel-body">@Html.DropDownListFor(model => model.DifficultyId, Model.Difficulties, "Non-défini", new { @class = "form-control" })</div>
                                </div>
                            </div>

                            <div class="form-group col-xs-3">
                                <input type="submit" name="filter" value="soumettre" class="btn btn-primary filter-selected-option"
                                       formaction="FilterQuestions" formmethod="post" />
                            </div>
                        </div>
                        </div>
                        @*<button id="surveyFilterId" data-url="@Url.Action("FilterQuestions", "Survey")">Filtrer</button>*@
        </div>

        <div>
            @for (int i = 0; i < Model.SurveySelectedQuestions.Count; i++)
            {
                <div class="col-sm-4 col-lg-4 col-md-4">
                    <div class="thumbnail">
                        <div class="caption">
                            [@Html.DisplayFor(m => m.SurveySelectedQuestions[i].CategoryName)/@Html.DisplayFor(m => m.SurveySelectedQuestions[i].TypeName)/@Html.DisplayFor(m => m.SurveySelectedQuestions[i].DifficultyLevel)]
                        </div>
                        <div class="ratings">
                            @Html.CheckBoxFor(m => m.SurveySelectedQuestions[i].IsChecked, new { @class = "selectedQuestion" })
                            @Html.DisplayFor(m => m.SurveySelectedQuestions[i].Content)
                            @Html.HiddenFor(m => m.SurveySelectedQuestions[i].Id)
                        </div>
                    </div>
                </div>
            }
        </div>

        <div id="create-retour-button">
            <div id="create-button">
                <input type="submit" name="create" value="Générer le formulaire"
                       formaction="Create" formmethod="post" class="btn btn-success" />
            </div>

            <div id="retour-button">@Html.ActionLink("retour à la page d'accueil", "index", "Home", null, new { type = "button", @class = "btn btn-warning" })</div>
        </div>
    
}

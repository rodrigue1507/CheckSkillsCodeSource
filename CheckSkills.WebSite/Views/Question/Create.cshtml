@model EditQuestionViewModel
@{
    ViewData["Title"] = "Creation";
}


@using (Html.BeginForm("Create", "Question", FormMethod.Post, new { @class = "js-form-createAndContinue-Question" }))
{
    <div class="container-fluid">

        <div class="panel panel-primary">
            <div class="panel-heading">Création-question</div>
            <div id="form-info" class="panel-body">
                @Html.ValidationSummary(false, "", new { @class = "form-horizontal" })
                <div class="form-group row ">
                    <div class="col-xs-1">
                        @Html.LabelFor(m => m.DifficultyId, new { @class = "col-form-label" })
                    </div>
                    <div class="col-xs-10">
                        @Html.DropDownListFor(m => m.DifficultyId, Model.Difficulties, "Non-défini", new { @class = "form-control" })
                    </div>
                </div>
                <div class="form-group row">
                    <div class="col-xs-1">
                        @Html.LabelFor(m => m.TypeId, new { @class = "col-form-label" })
                    </div>
                    <div class="col-xs-10">
                        @Html.DropDownListFor(m => m.TypeId, Model.QuestionTypes, "Non-défini", new { @class = "form-control" })
                    </div>
                </div>
                <div class="form-group row">
                    <div class="col-xs-1">
                        @Html.LabelFor(m => m.CategoryId, new { @class = "col-form-label" })
                    </div>
                    <div class="col-xs-10">
                        @Html.DropDownListFor(m => m.CategoryId, Model.Categories, "Non-défini", new { @class = "form-control" })
                    </div>
                </div>
                <div class="form-group row">
                    <div class="col-xs-1">
                        @Html.LabelFor(m => m.Content, new { @class = "col-form-label" })
                    </div>
                    <div class="col-xs-10">
                        @Html.TextAreaFor(m => m.Content, new { @class = "form-control", rows = "6" })
                    </div>
                </div>
            </div>

            <div class="panel-footer">
                <div class="row">
                    <div class="col-xs-4  pull-left">
                        <button type="submit" class="btn btn-default" style="background-color:#5f677e;border: none;"> @Html.ActionLink("Retour à la liste des questions sans enregistrer", "List")</button>
                    </div>

                    <div class="col-xs-4 text-center">
                        <button type="submit" class="btn btn-warning" style="background-color:#5f677e;border: none;">Enregistrer et retour</button>
                    </div>

                    <div class="col-xs-4 text-right">
                        <buton class="btn btn-success js-btn-createAndContinue-Question" style="background-color:#5f677e;border: none;">Enregistrer et nouveau</buton>
                    </div>
                </div>
            </div>
        </div>
    </div>

}

@section Scripts{

    <script>
        $(function () {
            $(".js-btn-createAndContinue-Question").click(function () {
                var form = $('.js-form-createAndContinue-Question');

                $.ajax({
                    type: "POST",
                    url: form.attr('action'),
                    data: form.serialize(),
                    success: function (response) {
                        location.href = "@Url.Action("Create", "Question", new { created=true})";
                    }
                });

            });

            if ($('.js-alert') !== undefined)
                $('.js-alert').show(0).delay(5000).hide(0);
        });
    </script>
}



@model EditQuestionViewModel
@{
    ViewData["Title"] = "Creation";
}

@using (Html.BeginForm("Create", "Question", FormMethod.Post, new { @class = "js-form-createAndContinue-Question" }))
{

    <h2>Création</h2>

    @Html.ValidationSummary(false, "", new { @class = "form-horizontal" })
    <div class="form-group row ">
        <div class="col-xs-1">
            @Html.LabelFor(m => m.DifficultyId, new { @class = "col-form-label" })
        </div>
        <div class="col-xs-10">
            @Html.DropDownListFor(m => m.DifficultyId, Model.Difficulties, "Non-défini", new { @class = "form-control" })
        </div>
    </div>
    <div class="form-group row">
        <div class="col-xs-1">
            @Html.LabelFor(m => m.TypeId, new { @class = "col-form-label" })
        </div>
        <div class="col-xs-10">
            @Html.DropDownListFor(m => m.TypeId, Model.QuestionTypes, "Non-défini", new { @class = "form-control js-question-type-select" })
        </div>
    </div>
    <div class="form-group row">
        <div class="col-xs-1">
            @Html.LabelFor(m => m.CategoryId, new { @class = "col-form-label" })
        </div>
        <div class="col-xs-10">
            @Html.DropDownListFor(m => m.CategoryId, Model.Categories, "Non-défini", new { @class = "form-control" })
        </div>
    </div>
    <div class="form-group row", style="margin-bottom:30px;">
        <div class="col-xs-1">
            @Html.LabelFor(m => m.Content, new { @class = "col-form-label" })
        </div>
        <div class="col-xs-10">
            @Html.TextAreaFor(m => m.Content, new { @class = "form-control", rows = "6" })
        </div>
    </div>


    <div class="row col-xs-12 container", style="margin-bottom:20px;">
        
            <button class="btn btn-default col-xs-5" onclick="window.location.href='@Url.Action("List", "Question")';">Retour à la liste</button>
       
            <div class="col-xs-2"></div>
        @*<div class="col-xs-4 text-center">
                <input type="submit" formaction="Question/SaveNewCreate" formmethod="post" class="btn btn-success js-btn-createAndContinue-Question" style="background-color:#5f677e;border: none;" value="Enregistrer et nouveau" />
            </div>*@
        
            <button type="submit" class="btn btn-default col-xs-5" >Enregistrer</button>
    </div>
}




@*@model CreateOrUpdateQuestionViewModel
    @using   CheckSkills.Domain.Constants;
    @{
        ViewData["Title"] = "Creation";
    }

    @{
        Html.RenderPartial("_CreateQuestion", Model.EditQuestionViewModel);
    }

    @{
        Html.RenderPartial("_EditAnswers", Model.EditAnswerViewModel);
    }

    @section Scripts{
        <script>

            function displayOrHideResponse(questionType) {
                if (questionType == @((int)QuestionTypeEnum.Qcm)) {
                    $(".js-edit-question-answers").show();
                } else {
                    $(".js-edit-question-answers").hide();
                }
            }

            displayOrHideResponse(@((int)Model.QuestionTypeEnum))

            $(".js-question-type-select").change(function (item) {
                displayOrHideResponse(item.target.value)
            });
        </script>
    }*@


